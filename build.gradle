buildscript {
    repositories {
        maven { url = 'https://artifactory.wolfdev.fr/libs-release' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'idea'

version = '1.0'
group = 'fr.wolfdev'
archivesBaseName = 'Wolflin'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = JavaVersion.VERSION_1_8 // Need this here so eclipse task generates correctly.

repositories {
    maven { url = 'https://artifactory.wolfdev.fr/libs-release' }
}

minecraft {
    mappings channel: 'snapshot', version: '20181008-1.13'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    //accessTransformer = file('my_at.cfg')

    // default run configurations.
    // these can be tweaked, removed, or duplicated as needed.
    runs {
        client = {
            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
        server = {
            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('runServer').canonicalPath
            source sourceSets.main
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge.test:forge:1.13-24.0.172-1.13-pre'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest.attributes([
            "Specification-Title"     : project.name,
            "Specification-Vendor"    : "WolfDev",
            "Specification-Version"   : "24.0", // We are version 1 of the modlauncher specification
            "Implementation-Title"    : project.name,
            "Implementation-Version"  : "${version}",
            "Implementation-Vendor"   : "WolfDev",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}